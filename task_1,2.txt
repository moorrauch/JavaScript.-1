1. Дан код. Почему код даёт именно такие результаты?

var a = 1, b = 1, c, d;
c = ++a; alert(c);           // 2 - префиксная форма инкремента, увеличивает на 1, возвращает значение после увеличения;
d = b++; alert(d);           // 1 - постфиксная форма инкремента, увеличивает на 1, но возвращает значение, которое было до увеличения;
c = (2+ ++a); alert(c);      // 5 - теперь переменная a = 2, внутри выражения инкремент имеет приоритет выше, чем арифметическая операция, выполняется первым, => a = 3, к 2 прибавляется новое значение a;
d = (2+ b++); alert(d);      // 4 - теперь переменная b = 2, внутри выражения инкремент имеет приоритет выше, чем арифметическая операция, выполняется первым, но постфиксная форма возвращает значение, которое было до увеличения, => к 2 прибавляется старое значение b;
alert(a);                    // 3 - a = 3 после c = (2+ ++a);
alert(b);                    // 3 - b = 3 после d = (2+ b++);




2. Чему будет равен x в примере ниже?

var a = 2;
var x = 1 + (a *= 2);

x = 5, т.к. выражения в скобках имеют приоритет выполнения, в выражении (a *= 2) переменной a присваивается значение 2, умноженное на 2, => (2 * 2) = 4, это значение прибавляется к 1, => x = 1 + 4 = 5;